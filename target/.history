{file:/Users/riadh/IdeaProjects/kata-word-wrap/}kata-word-wrap/compile
{file:/Users/riadh/IdeaProjects/kata-word-wrap/}kata-word-wrap/packagedArtifact
{file:/Users/riadh/IdeaProjects/kata-word-wrap/}kata-word-wrap/allDependencies
{file:/Users/riadh/IdeaProjects/kata-word-wrap/}kata-word-wrap/compile
{file:/Users/riadh/IdeaProjects/kata-word-wrap/}kata-word-wrap/clean
{file:/Users/riadh/IdeaProjects/kata-word-wrap/}kata-word-wrap/allDependencies
show {file:/Users/riadh/IdeaProjects/kata-word-wrap/}kata-word-wrap/compile
{file:/Users/riadh/IdeaProjects/kata-word-wrap/}kata-word-wrap/compile
{file:/Users/riadh/IdeaProjects/kata-word-wrap/}kata-word-wrap/clean
{file:/Users/riadh/IdeaProjects/kata-word-wrap/}kata-word-wrap/compile
{file:/Users/riadh/IdeaProjects/kata-word-wrap/}kata-word-wrap/executeTests
{file:/Users/riadh/IdeaProjects/kata-word-wrap/}kata-word-wrap/compile
{file:/Users/riadh/IdeaProjects/kata-word-wrap/}kata-word-wrap/clean
{file:/Users/riadh/IdeaProjects/kata-word-wrap/}kata-word-wrap/allDependencies
{file:/Users/riadh/IdeaProjects/kata-word-wrap/}kata-word-wrap/compile
{file:/Users/riadh/IdeaProjects/kata-word-wrap/}kata-word-wrap/clean
{file:/Users/riadh/IdeaProjects/kata-word-wrap/}kata-word-wrap/compile
{file:/Users/riadh/IdeaProjects/kata-word-wrap/}kata-word-wrap/executeTests
about
compile
test
compile
test
compile
test
compile
test
{file:/Users/riadh/IdeaProjects/kata-word-wrap/}kata-word-wrap/allDependencies
compile test
compile
test
compile
compile test
compile
test
{file:/Users/riadh/IdeaProjects/kata-word-wrap/}kata-word-wrap/testOnly
{file:/Users/riadh/IdeaProjects/kata-word-wrap/}kata-word-wrap/test
clear
clean
test
{file:/Users/riadh/IdeaProjects/kata-word-wrap/}kata-word-wrap/test
{file:/Users/riadh/IdeaProjects/kata-word-wrap/}kata-word-wrap/run
{file:/Users/riadh/IdeaProjects/kata-word-wrap/}kata-word-wrap/allDependencies
compile
build
compile
test
compile
test
about
compile
test
tasks
clean
clear
tasks
update
compile
test
clean
compile
test
clean
compile
test
compile
test
compile
test
compile
test
clean
compile
test
compile
test
compile
test
compile
test
clean
test
compile
val nums = List(1, 2, 3, 4)  nums: List[Int] = List(1, 2, 3, 4)    scala> val sum = nums.foldLeft(0){ (acc, num) => acc + num  }  sum: Int = 10
scala
repl
